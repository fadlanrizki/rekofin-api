// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId     Int    @id @default(autoincrement())
  username   String @unique
  password   String
  role       Role
  fullName   String
  email      String @unique
  occupation String

  financialFacts        FinancialFact[]
  recommendationHistory RecommendationHistory[]
  rules                 Rule[]                  @relation("CreatedRules")
}

model FinancialFact {
  factId          Int @id @default(autoincrement())
  userId          Int
  income          Int
  savings         Int
  emergencyFund   Int
  investment      Int
  debt            Int
  monthlyExpenses Int

  createdAt DateTime

  user User @relation(fields: [userId], references: [userId])
}

model RecommendationCategory {
  categoryId   Int    @id @default(autoincrement())
  categoryName String
  description  String

  recommendations Recommendation[]
  rules           Rule[]
}

model Recommendation {
  recomendationId Int    @id @default(autoincrement())
  categoryId      Int
  title           String
  description     String
  source          String

  category RecommendationCategory  @relation(fields: [categoryId], references: [categoryId])
  history  RecommendationHistory[]
}

model RecommendationHistory {
  historyId       Int      @id @default(autoincrement())
  userId          Int
  recomendationId Int
  createdAt       DateTime @default(now())

  user           User           @relation(fields: [userId], references: [userId])
  recommendation Recommendation @relation(fields: [recomendationId], references: [recomendationId])
}

model Rule {
  ruleId     Int    @id @default(autoincrement())
  categoryId Int
  condition  String
  conclusion String
  createdBy  Int

  category RecommendationCategory @relation(fields: [categoryId], references: [categoryId])
  author   User                   @relation("CreatedRules", fields: [createdBy], references: [userId])
}

enum Role {
  admin
  employee
}
